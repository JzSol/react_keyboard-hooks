{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setKey","pressedKey","event","useEffect","document","addEventListener","removeEventListener","className","type","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAa,SAACC,GAClBF,GAAO,kBAAME,EAAMH,QASrB,OANAI,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASJ,GAE5B,kBAAMG,SAASE,oBAAoB,QAASL,MAClD,IAGD,sBAAKM,UAAU,MAAf,UACE,uBAAOC,KAAK,SAEZ,mBAAGD,UAAU,eAAb,SACGR,EAAG,mCAA+BA,EAA/B,KAAwC,gC,MCfpDU,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.bcf8f69a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useState('');\n\n  const pressedKey = (event: KeyboardEvent) => {\n    setKey(() => event.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', pressedKey);\n\n    return () => document.removeEventListener('keyup', pressedKey);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input type=\"text\" />\n\n      <p className=\"App__message\">\n        {key ? `The last pressed key is [${key}]` : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}